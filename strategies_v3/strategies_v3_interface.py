# üî∏ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π v3

class StrategyInterface:
    def __init__(self, redis_client, database_url):
        # üî∏ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis –∏ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        self.redis = redis_client
        self.database_url = database_url

    async def log_strategy_action(self, strategy_id: int, log_id: int, status: str, note: str, position_id: int = None):
        # üî∏ –ó–∞–≥–ª—É—à–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        print(f"üìù –õ–æ–≥: strategy_id={strategy_id}, log_id={log_id}, status={status}, note={note}")

    async def run_basic_checks(self, task: dict) -> tuple[bool, str]:
        # üî∏ –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –ø–æ–∑–∏—Ü–∏–∏
        strategy_name = task.get("strategy")
        symbol = task.get("symbol")
        direction = task.get("direction")

        # üîπ –ù–∞–π—Ç–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        strategy_id = None
        for sid, data in strategies_cache.items():
            if data["name"] == strategy_name:
                strategy_id = sid
                strategy = data
                break

        if strategy_id is None:
            return False, "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã ‚Äî —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

        # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ —Ç–∏–∫–µ—Ä–∞
        allowed = strategy_allowed_tickers.get(strategy_id, set())
        if symbol not in allowed:
            return False, "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã ‚Äî —Ç–∏–∫–µ—Ä –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"

        # üîπ –ü–æ–∏—Å–∫ –æ—Ç–∫—Ä—ã—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏
        for pos in open_positions.values():
            if pos["strategy_id"] == strategy_id and pos["symbol"] == symbol:
                if pos["direction"] == direction:
                    return False, "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã ‚Äî –ø–æ–∑–∏—Ü–∏—è –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞"
                else:
                    if not strategy.get("reverse", False):
                        return False, "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã ‚Äî –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞, —Ä–µ–≤–µ—Ä—Å –∑–∞–ø—Ä–µ—â—ë–Ω"
                    else:
                        return True, "–†–∞–∑—Ä–µ—à—ë–Ω —Ä–µ–≤–µ—Ä—Å ‚Äî –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π"

        return True, "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"